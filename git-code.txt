
mkdir [repository] // 创建空文件夹目录

cd [repository] // 把路径转到资源库所在路径

pwd // 显示当前目录

git init // 把当前目录初始化为一个可管理的仓库

git add [file] // 向资源库中新增一个文件

git status // 资源库当前状态，是否有修改

git diff // 查看修改的内容

git commit -m [description] // 提交，description为本次提交的说明

git log // 查看每次修改的日志

git reset --hard head^ // 回到当前上一个版本，^的数量代表回退版本的数量，要回退特别多可以用

git reset --hard head~10 // 回退10个版本

git reest --hard [commit id] // 前往[commit id]的特定版本，可以回退也可以前进，commit id没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位，因为Git可能会找到多个版本号，就无法确定是哪一个了。

cat [file] // 打印文件内容

git reflog // 显示每次提交记录的情况

git restore [file] // 将head版本的文件恢复到当前文件中

git restore --staged [file] // 把暂存区的修改撤销掉（unstage）